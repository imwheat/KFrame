//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/KFrame/Systems/InputSystem/GameInputAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace KFrame.Systems
{
    public partial class @GameInputAction : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @GameInputAction()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameInputAction"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""e6a77ed9-1a89-463c-8599-a7b0c3c2ecc4"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""6b3b9922-a309-4592-99bd-84fc842900b2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MousePos"",
                    ""type"": ""Value"",
                    ""id"": ""6aa59f2c-da6b-4050-be00-89edffb0ecbf"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""8268e6c2-f760-459a-8d23-c700180366f3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Scroll"",
                    ""type"": ""Value"",
                    ""id"": ""9abc6bde-aff9-4746-b8ce-63cdfe09aecd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""503dbcb8-2107-446a-ae50-ee9a06da4fec"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SwitchLastItem"",
                    ""type"": ""Button"",
                    ""id"": ""0e899605-f016-47ca-99d2-705c9e0bd7cf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchNextItem"",
                    ""type"": ""Button"",
                    ""id"": ""99f45472-9d5b-4bf9-89da-74af90330e3f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Esc"",
                    ""type"": ""Button"",
                    ""id"": ""0e1cb3c4-1923-40d5-a654-f7860943c3a2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Map"",
                    ""type"": ""Button"",
                    ""id"": ""9a528270-5e3e-407d-972b-e261f1c7c426"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Num1"",
                    ""type"": ""Button"",
                    ""id"": ""bd890303-bf08-4938-b28a-5f6b1192dba6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Num2"",
                    ""type"": ""Button"",
                    ""id"": ""39715a87-00b7-490d-b91e-af45c334f390"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Num3"",
                    ""type"": ""Button"",
                    ""id"": ""8ee450ea-c44c-44ec-9270-29f84c624b9d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Num4"",
                    ""type"": ""Button"",
                    ""id"": ""ea2242ef-eb8b-4892-8250-1fa7338f5c70"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""336dc04a-1655-4ae4-a988-f3bf80b43bb9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""6cbc00e9-0049-431c-8f17-639e1169cac0"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""3c5bc810-1fcb-4a60-9a52-89e30098f228"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5a987ad4-d363-4f46-9b73-d94fa0900979"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f43aa744-9254-4cbb-a3dc-a6b917ca2a4a"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""GamePad"",
                    ""id"": ""fe07fd7c-b143-4706-9eb7-c35a1ef769dd"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""727a6249-efc6-429a-bd11-972cd78d1a65"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""9c221c78-7576-4e05-a14a-78896b7c9885"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d3c5246e-0179-44d5-acde-f13e5e15c556"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""a877a320-ab71-4acd-8b8d-8c3eb251f663"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8464b73c-b016-4d41-b3e8-89e2a81305fc"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""MousePos"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a1bf4bdb-f602-47f8-961d-10f00bdd556f"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c69a7f1e-5771-4c46-b848-c3a82c1bbb9c"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""822dda47-4ad7-4d40-815f-084f7541b00b"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c7f1c0ac-80e6-4a62-84e7-6be407582df2"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0f985609-cf90-4483-b2a4-e2f5723c45d9"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d8a84199-ed9e-4eb9-87f6-7bf6a93bb1db"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""SwitchLastItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9bb8dd71-8058-4508-8063-0edcbf0a1a97"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""SwitchNextItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f729580a-2f84-46d4-abe2-505ceabb3025"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Esc"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""75b14556-5ed8-4589-8dc7-15dbeecce16e"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Esc"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc2567be-63c8-447c-b742-2d2409867eb2"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""14c4b937-875c-4175-8dd2-05103305c19b"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f000448-9cb7-4fed-a1da-c6a798434288"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Num1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a59d3c2-e710-463b-b8a0-c5b5c5b9fd06"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Num1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e4f0183e-40bf-4a9d-8154-a6f8d2a73718"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Num2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a0a05b60-1433-40d2-b9eb-7b075aa32149"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Num2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1e0577e2-e302-4a6d-bcf7-f1f2572d7c56"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Num3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6413939b-4d09-4976-a2a0-c0ad68db5630"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Num3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""534b8b53-80c6-451c-8a64-5849242316de"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Num4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d42c72e-f3ac-476c-b367-0d000be96b6e"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Num4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""KeyboardAndMouse"",
            ""bindingGroup"": ""KeyboardAndMouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""GamePad"",
            ""bindingGroup"": ""GamePad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Touch"",
            ""bindingGroup"": ""Touch"",
            ""devices"": [
                {
                    ""devicePath"": ""<Touchscreen>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Joystick"",
            ""bindingGroup"": ""Joystick"",
            ""devices"": [
                {
                    ""devicePath"": ""<AndroidJoystick>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""XR"",
            ""bindingGroup"": ""XR"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
            // Player
            m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
            m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
            m_Player_MousePos = m_Player.FindAction("MousePos", throwIfNotFound: true);
            m_Player_Attack = m_Player.FindAction("Attack", throwIfNotFound: true);
            m_Player_Scroll = m_Player.FindAction("Scroll", throwIfNotFound: true);
            m_Player_Interact = m_Player.FindAction("Interact", throwIfNotFound: true);
            m_Player_SwitchLastItem = m_Player.FindAction("SwitchLastItem", throwIfNotFound: true);
            m_Player_SwitchNextItem = m_Player.FindAction("SwitchNextItem", throwIfNotFound: true);
            m_Player_Esc = m_Player.FindAction("Esc", throwIfNotFound: true);
            m_Player_Map = m_Player.FindAction("Map", throwIfNotFound: true);
            m_Player_Num1 = m_Player.FindAction("Num1", throwIfNotFound: true);
            m_Player_Num2 = m_Player.FindAction("Num2", throwIfNotFound: true);
            m_Player_Num3 = m_Player.FindAction("Num3", throwIfNotFound: true);
            m_Player_Num4 = m_Player.FindAction("Num4", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Player
        private readonly InputActionMap m_Player;
        private IPlayerActions m_PlayerActionsCallbackInterface;
        private readonly InputAction m_Player_Move;
        private readonly InputAction m_Player_MousePos;
        private readonly InputAction m_Player_Attack;
        private readonly InputAction m_Player_Scroll;
        private readonly InputAction m_Player_Interact;
        private readonly InputAction m_Player_SwitchLastItem;
        private readonly InputAction m_Player_SwitchNextItem;
        private readonly InputAction m_Player_Esc;
        private readonly InputAction m_Player_Map;
        private readonly InputAction m_Player_Num1;
        private readonly InputAction m_Player_Num2;
        private readonly InputAction m_Player_Num3;
        private readonly InputAction m_Player_Num4;
        public struct PlayerActions
        {
            private @GameInputAction m_Wrapper;
            public PlayerActions(@GameInputAction wrapper) { m_Wrapper = wrapper; }
            public InputAction @Move => m_Wrapper.m_Player_Move;
            public InputAction @MousePos => m_Wrapper.m_Player_MousePos;
            public InputAction @Attack => m_Wrapper.m_Player_Attack;
            public InputAction @Scroll => m_Wrapper.m_Player_Scroll;
            public InputAction @Interact => m_Wrapper.m_Player_Interact;
            public InputAction @SwitchLastItem => m_Wrapper.m_Player_SwitchLastItem;
            public InputAction @SwitchNextItem => m_Wrapper.m_Player_SwitchNextItem;
            public InputAction @Esc => m_Wrapper.m_Player_Esc;
            public InputAction @Map => m_Wrapper.m_Player_Map;
            public InputAction @Num1 => m_Wrapper.m_Player_Num1;
            public InputAction @Num2 => m_Wrapper.m_Player_Num2;
            public InputAction @Num3 => m_Wrapper.m_Player_Num3;
            public InputAction @Num4 => m_Wrapper.m_Player_Num4;
            public InputActionMap Get() { return m_Wrapper.m_Player; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
            public void SetCallbacks(IPlayerActions instance)
            {
                if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
                {
                    @Move.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                    @Move.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                    @Move.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                    @MousePos.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMousePos;
                    @MousePos.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMousePos;
                    @MousePos.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMousePos;
                    @Attack.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAttack;
                    @Attack.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAttack;
                    @Attack.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAttack;
                    @Scroll.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnScroll;
                    @Scroll.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnScroll;
                    @Scroll.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnScroll;
                    @Interact.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                    @Interact.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                    @Interact.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                    @SwitchLastItem.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSwitchLastItem;
                    @SwitchLastItem.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSwitchLastItem;
                    @SwitchLastItem.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSwitchLastItem;
                    @SwitchNextItem.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSwitchNextItem;
                    @SwitchNextItem.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSwitchNextItem;
                    @SwitchNextItem.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSwitchNextItem;
                    @Esc.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEsc;
                    @Esc.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEsc;
                    @Esc.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEsc;
                    @Map.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMap;
                    @Map.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMap;
                    @Map.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMap;
                    @Num1.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnNum1;
                    @Num1.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnNum1;
                    @Num1.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnNum1;
                    @Num2.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnNum2;
                    @Num2.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnNum2;
                    @Num2.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnNum2;
                    @Num3.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnNum3;
                    @Num3.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnNum3;
                    @Num3.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnNum3;
                    @Num4.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnNum4;
                    @Num4.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnNum4;
                    @Num4.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnNum4;
                }
                m_Wrapper.m_PlayerActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Move.started += instance.OnMove;
                    @Move.performed += instance.OnMove;
                    @Move.canceled += instance.OnMove;
                    @MousePos.started += instance.OnMousePos;
                    @MousePos.performed += instance.OnMousePos;
                    @MousePos.canceled += instance.OnMousePos;
                    @Attack.started += instance.OnAttack;
                    @Attack.performed += instance.OnAttack;
                    @Attack.canceled += instance.OnAttack;
                    @Scroll.started += instance.OnScroll;
                    @Scroll.performed += instance.OnScroll;
                    @Scroll.canceled += instance.OnScroll;
                    @Interact.started += instance.OnInteract;
                    @Interact.performed += instance.OnInteract;
                    @Interact.canceled += instance.OnInteract;
                    @SwitchLastItem.started += instance.OnSwitchLastItem;
                    @SwitchLastItem.performed += instance.OnSwitchLastItem;
                    @SwitchLastItem.canceled += instance.OnSwitchLastItem;
                    @SwitchNextItem.started += instance.OnSwitchNextItem;
                    @SwitchNextItem.performed += instance.OnSwitchNextItem;
                    @SwitchNextItem.canceled += instance.OnSwitchNextItem;
                    @Esc.started += instance.OnEsc;
                    @Esc.performed += instance.OnEsc;
                    @Esc.canceled += instance.OnEsc;
                    @Map.started += instance.OnMap;
                    @Map.performed += instance.OnMap;
                    @Map.canceled += instance.OnMap;
                    @Num1.started += instance.OnNum1;
                    @Num1.performed += instance.OnNum1;
                    @Num1.canceled += instance.OnNum1;
                    @Num2.started += instance.OnNum2;
                    @Num2.performed += instance.OnNum2;
                    @Num2.canceled += instance.OnNum2;
                    @Num3.started += instance.OnNum3;
                    @Num3.performed += instance.OnNum3;
                    @Num3.canceled += instance.OnNum3;
                    @Num4.started += instance.OnNum4;
                    @Num4.performed += instance.OnNum4;
                    @Num4.canceled += instance.OnNum4;
                }
            }
        }
        public PlayerActions @Player => new PlayerActions(this);
        private int m_KeyboardAndMouseSchemeIndex = -1;
        public InputControlScheme KeyboardAndMouseScheme
        {
            get
            {
                if (m_KeyboardAndMouseSchemeIndex == -1) m_KeyboardAndMouseSchemeIndex = asset.FindControlSchemeIndex("KeyboardAndMouse");
                return asset.controlSchemes[m_KeyboardAndMouseSchemeIndex];
            }
        }
        private int m_GamePadSchemeIndex = -1;
        public InputControlScheme GamePadScheme
        {
            get
            {
                if (m_GamePadSchemeIndex == -1) m_GamePadSchemeIndex = asset.FindControlSchemeIndex("GamePad");
                return asset.controlSchemes[m_GamePadSchemeIndex];
            }
        }
        private int m_TouchSchemeIndex = -1;
        public InputControlScheme TouchScheme
        {
            get
            {
                if (m_TouchSchemeIndex == -1) m_TouchSchemeIndex = asset.FindControlSchemeIndex("Touch");
                return asset.controlSchemes[m_TouchSchemeIndex];
            }
        }
        private int m_JoystickSchemeIndex = -1;
        public InputControlScheme JoystickScheme
        {
            get
            {
                if (m_JoystickSchemeIndex == -1) m_JoystickSchemeIndex = asset.FindControlSchemeIndex("Joystick");
                return asset.controlSchemes[m_JoystickSchemeIndex];
            }
        }
        private int m_XRSchemeIndex = -1;
        public InputControlScheme XRScheme
        {
            get
            {
                if (m_XRSchemeIndex == -1) m_XRSchemeIndex = asset.FindControlSchemeIndex("XR");
                return asset.controlSchemes[m_XRSchemeIndex];
            }
        }
        public interface IPlayerActions
        {
            void OnMove(InputAction.CallbackContext context);
            void OnMousePos(InputAction.CallbackContext context);
            void OnAttack(InputAction.CallbackContext context);
            void OnScroll(InputAction.CallbackContext context);
            void OnInteract(InputAction.CallbackContext context);
            void OnSwitchLastItem(InputAction.CallbackContext context);
            void OnSwitchNextItem(InputAction.CallbackContext context);
            void OnEsc(InputAction.CallbackContext context);
            void OnMap(InputAction.CallbackContext context);
            void OnNum1(InputAction.CallbackContext context);
            void OnNum2(InputAction.CallbackContext context);
            void OnNum3(InputAction.CallbackContext context);
            void OnNum4(InputAction.CallbackContext context);
        }
    }
}
